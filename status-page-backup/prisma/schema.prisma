// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  organizations Organization[]
  teams         Team[]
}

model Organization {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]
  teams       Team[]
  services    Service[]
}

model Team {
  id            String    @id @default(cuid())
  name          String
  organization  Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  users         User[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Service {
  id            String    @id @default(cuid())
  name          String
  description   String?
  status        ServiceStatus @default(OPERATIONAL)
  organization  Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  incidents     Incident[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Incident {
  id            String    @id @default(cuid())
  title         String
  description   String
  status        IncidentStatus @default(INVESTIGATING)
  severity      Severity @default(MEDIUM)
  service       Service @relation(fields: [serviceId], references: [id])
  serviceId     String
  updates       IncidentUpdate[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resolvedAt    DateTime?
}

model IncidentUpdate {
  id            String    @id @default(cuid())
  content       String
  incident      Incident @relation(fields: [incidentId], references: [id])
  incidentId    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

enum ServiceStatus {
  OPERATIONAL
  DEGRADED_PERFORMANCE
  PARTIAL_OUTAGE
  MAJOR_OUTAGE
  MAINTENANCE
}

enum IncidentStatus {
  INVESTIGATING
  IDENTIFIED
  MONITORING
  RESOLVED
}

enum Severity {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}
